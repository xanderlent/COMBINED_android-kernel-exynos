function gen_headers() {
    # install headers for android headers parser
    (
        cd ${OUT_DIR}
        make O=${OUT_DIR} headers_install
    )
}

function tar_modules() {
    # tar up modules
    (
        set +x
        echo " Archiving kernel module files"
        MODULES=$(find ${MODULES_STAGING_DIR} -type f -name "*.ko")
        if [ -n "${MODULES}" ]; then
          mkdir -p ${DIST_DIR}
          rm -f ${DIST_DIR}/kernel-modules.tar.gz
          for FILE in ${MODULES}; do
            echo "  ${FILE##*/}"
            tar -rf ${DIST_DIR}/kernel-modules.tar -C ${FILE%/*} ${FILE##*/}
          done
          gzip -9 ${DIST_DIR}/kernel-modules.tar
        fi
        set -x
    )
}

ARCH=arm64
BRANCH=android-exynos-r11-4.9
CROSS_COMPILE=aarch64-linux-android-
DEFCONFIG=r11_defconfig
EXTRA_CMDS=''
KERNEL_DIR=private/exynos-google-cw
POST_DEFCONFIG_CMDS="check_defconfig;gen_headers"
LINUX_GCC_CROSS_COMPILE_PREBUILTS_BIN=prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin
FILES="
arch/arm64/boot/Image.gz
vmlinux
System.map
arch/arm64/boot/dts/exynos/exynos9110.dtb
arch/arm64/boot/dts/exynos/exynos9110/r11_dev1_combined.dtb
arch/arm64/boot/dts/exynos/exynos9110/r11_dev1_overlay.dtbo
"
IN_KERNEL_MODULES=1
EXT_MODULES="
private/exynos-google-cw-extra/drivers/bluetooth
private/exynos-google-cw-extra/drivers/net/wireless/bcmdhd
private/exynos-google-cw-extra/drivers/nfc
private/exynos-google-cw-extra/drivers/nfc/ese
private/exynos-google-cw-extra/drivers/sound/cs35l41
private/exynos-google-cw-extra/drivers/input/touchscreen
"
EXTRA_CMDS="tar_modules"
